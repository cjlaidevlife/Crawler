# create html path
for(i in 1:8){
if(i == 1){
paths <- url_fun("")
}else{
paths <- url_fun(i)
}
# Load data
htmlcontent <- read_html(paths)
Dates <- htmlcontent%>%
html_nodes(xpath = path_Date)%>%
html_text()
Types <- htmlcontent%>%
html_nodes(xpath = path_Type)%>%
html_text()
Locals <- htmlcontent%>%
html_nodes(xpath = path_Local)%>%
html_text()
Closings <- htmlcontent%>%
html_nodes(xpath = path_Closing)%>%
html_text()
BuildPings <- htmlcontent%>%
html_nodes(xpath = path_BuildPing)%>%
html_text()
Prices <- htmlcontent%>%
html_nodes(xpath = path_Price)%>%
html_text()
LocalPings <- htmlcontent%>%
html_nodes(xpath = path_LocalPing)%>%
html_text()
Floors <- htmlcontent%>%
html_nodes(xpath = path_Floor)%>%
html_text()
Olds <- htmlcontent%>%
html_nodes(xpath = path_Old)%>%
html_text()
ParkingSpaces <- htmlcontent%>%
html_nodes(xpath = path_ParkingSpace)%>%
html_text()
PathNum <- substr(paths,nchar(paths)-20,nchar(paths))
cat("第",i,"頁讀取中...(~",PathNum,")","\n")
# Finish DataFrame
x <- rbind(x,data.frame(Dates,Types,Locals,Closings,BuildPings,Prices,LocalPings,Floors,Olds,ParkingSpaces))
}
cat("步驟三：資料清理請稍候...","\n")
Etl_r_n <- lapply(x,str_trim)
Etl_space <- lapply(Etl_r_n,str_trim)
# Output data to csv
cat("清理完成，開始匯出檔案...","\n")
Today <- Sys.Date()
Insurance_name <- paste0("/Users/max716134/Basic/R/Crawler_Data/(",Today,")Crawler_YoungChing_Neihu.csv")
write.table(Etl_space,Insurance_name,quote=TRUE,sep = ",",na="NaN",fileEncoding="utf-8")# 是否覆蓋同檔名使用'append'
cat("恭喜完成！請至目標資料夾查看！")
View(Etl_r_n)
Etl_space[,3]
Etl_space[3]
x
Etl_r_n <- as.data.frame(lapply(x,str_trim))
View(Etl_r_n)
Etl_space <- as.data.frame(lapply(Etl_r_n,str_trim))
View(Etl_space)
Etl_space <- lapply(Etl_r_n,str_trim)
View(Etl_space)
View(Etl_x)
View(Etl_x)
View(Etl_space)
View(Etl_r_n)
Etl_space[10]
Etl_x[10]
Etl_x[4]
str_trim(Etl_x[4])
gsub("[^[:alnum:] ]", "",Etl_x[4])
gsub ( "\r?\n|\r" ,  " " ,Etl_x[4])
gsub ("\r","",Etl_x[4])
Etl_x[4]
gsub ("\r?\n|\r",  " " ,Etl_x[4][1])
Etl_x[4][1]
Etl_x[4[1]]
f <- Etl_x[4]
f[1]
f[1,1]
f(1,1)
f[2]
f[1]
as.data.frame(f)
g <- as.data.frame(f)
View(g)
g[1,1]
gsub ("\r?\n|\r",  " " ,g[1,1])
View(Etl_r_n)
View(Etl_x)
cat("步驟一：爬蟲工具初始化...","\n")
source(paste0(getwd(),"/NeedPackage.R"))
source(paste0(getwd(),"/UrlXpath.R"))
# Function for paste url
url_fun <- function(i){
x = paste0("https://evertrust.yungching.com.tw/regionyc/%e5%8f%b0%e5%8c%97%e5%b8%82/%e5%85%a7%e6%b9%96%e5%8d%80?",i,"l=2&s=1#mainContent")
return(x)
}
# Start DataFrame
x <- data.frame()
cat("步驟二：開始爬取資料:","\n")
# create html path
for(i in 1:8){
if(i == 1){
paths <- url_fun("")
}else{
paths <- url_fun(i)
}
# Load data
htmlcontent <- read_html(paths)
Dates <- htmlcontent%>%
html_nodes(xpath = path_Date)%>%
html_text()
Types <- htmlcontent%>%
html_nodes(xpath = path_Type)%>%
html_text()
Locals <- htmlcontent%>%
html_nodes(xpath = path_Local)%>%
html_text()
Closings <- htmlcontent%>%
html_nodes(xpath = path_Closing)%>%
html_text()
BuildPings <- htmlcontent%>%
html_nodes(xpath = path_BuildPing)%>%
html_text()
Prices <- htmlcontent%>%
html_nodes(xpath = path_Price)%>%
html_text()
LocalPings <- htmlcontent%>%
html_nodes(xpath = path_LocalPing)%>%
html_text()
Floors <- htmlcontent%>%
html_nodes(xpath = path_Floor)%>%
html_text()
Olds <- htmlcontent%>%
html_nodes(xpath = path_Old)%>%
html_text()
ParkingSpaces <- htmlcontent%>%
html_nodes(xpath = path_ParkingSpace)%>%
html_text()
PathNum <- substr(paths,nchar(paths)-20,nchar(paths))
cat("第",i,"頁讀取中...(~",PathNum,")","\n")
# Finish DataFrame
x <- rbind(x,data.frame(Dates,Types,Locals,Closings,BuildPings,Prices,LocalPings,Floors,Olds,ParkingSpaces))
}
cat("步驟三：資料清理請稍候...","\n")
Etl_space <- as.data.frame(lapply(x,str_trim))
#Etl_space <- lapply(Etl_r_n,str_trim)
# Output data to csv
cat("清理完成，開始匯出檔案...","\n")
Today <- Sys.Date()
Insurance_name <- paste0("/Users/max716134/Basic/R/Crawler_Data/(",Today,")Crawler_YoungChing_Neihu.csv")
write.table(Etl_space,Insurance_name,quote=TRUE,sep = ",",na="NaN",fileEncoding="utf-8")# 是否覆蓋同檔名使用'append'
cat("恭喜完成！請至目標資料夾查看！")
View(Etl_space)
View(Etl_space)
View(Etl_space)
Etl_space[1,]
Etl_space[,1]
row_number(Etl_space)
col_number(Etl_space)
length(Etl_space)
nrow(Etl_space)
fun2 <- function(a){
for(i in 1:nrow(a)){
a[,i] <-gsub("\r?\n|\r","",a[,i])
}
}
fun2(Etl_space)
Etl_space[1]
fun2(Etl_space[1])
gsub("\r?\n|\r","",Etl_space[1])
gsub("\r?\n|\r","",Etl_space[1,1])
Etl_space[1]
Etl_space[4,1]
Etl_space[1]
Etl_space[2]
Etl_space[3]
Etl_space[3,1]
Etl_space[3,2]
Etl_space[3,3]
Etl_space[1,3]
gsub("\r?\n|\r","",Etl_space[1,3])
View(Etl_space)
Etl_space[1,1]
Etl_space[1,3]
Etl_space[,3]
gsub("\r?\n|\r","",a[,i])
gsub("\r?\n|\r","",Etl_space[,3])
Etl_space[,3]
fun2 <- function(a){
for(i in 1:nrow(a)){
a[,i] <-gsub("\r?\n|\r","",a[,i])
}
}
lapply(Etl_space,fun2)
nrow(Etl_space)
fun2 <- function(a){
a[,i] <-gsub("\r?\n|\r","",a[,i])
}
lapply(Etl_space,fun2)
gsub("\r?\n|\r","",Etl_space[,1])
gsub("\r?\n|\r","",Etl_space[,2])
ncol(Etl_space)
fun2 <- function(a){
for(i in 1:ncol(Etl_space)){
a[,i] <-gsub("\r?\n|\r","",a[,i])
}
}
lapply(Etl_space,fun2)
fun2(Etl_space)
s <- fun2(Etl_space)
s
gsub("\r?\n|\r","",Etl_space[,3])
fun2(Etl_space[,1])
fun <- function(a){
a[,i] <-gsub("\r?\n|\r","",a[,i])
}
fun(Etl_space[,1])
fun <- function(a){
a[,1] <-gsub("\r?\n|\r","",a[,1])
}
d <- Etl_space
fun(d)
s <- fun(d)
s
s <- fun(d,2)
s <- fun(d,2)
fun <- function(a,b){
a[,b] <-gsub("\r?\n|\r","",a[,b])
return(a)
}
s <- fun(d,2)
s
fun <- function(a,b){
a[,b] <-gsub("\r?\n|\r","",a[,b])
return(a[,b])
}
s <- fun(d,2)
s
s <- fun(d,3)
s
ncol(Etl_nr)
ncol(Etl_space)
for(i in 1:ncol(Etl_space)){
Etl_nr(Etl_space,i)
}
Etl_nr <- function(a,b){
a[,b] <-gsub("\r?\n|\r","",a[,b])
return(a[,b])
}
for(i in 1:ncol(Etl_space)){
Etl_nr(Etl_space,i)
}
Etl_space
View(Etl_space)
View(Etl_space)
Etl_space
Etl_nr(Etl_space,3)
Etl_space(,3)
Etl_space[],3]
Etl_space[,3]
for(i in 1:ncol(Etl_space)){
Etl_space[,i] <- Etl_nr(Etl_space,i)
}
Etl_space
View(Etl_space)
View(Etl_space)
lapply(Etl_space,str_trim)
source(paste0(getwd(),"/FunLibary.R"))
getwd()
cat("步驟一：爬蟲工具初始化...","\n")
source(paste0(getwd(),"/NeedPackage.R"))
source(paste0(getwd(),"/UrlXpath.R"))
source(paste0(getwd(),"/FunLibary.R"))
# Start DataFrame
x <- data.frame()
cat("步驟二：開始爬取資料:","\n")
# create html path
for(i in 1:8){
if(i == 1){
paths <- url_fun("")
}else{
paths <- url_fun(i)
}
# Load data
htmlcontent <- read_html(paths)
Dates <- htmlcontent%>%
html_nodes(xpath = path_Date)%>%
html_text()
Types <- htmlcontent%>%
html_nodes(xpath = path_Type)%>%
html_text()
Locals <- htmlcontent%>%
html_nodes(xpath = path_Local)%>%
html_text()
Closings <- htmlcontent%>%
html_nodes(xpath = path_Closing)%>%
html_text()
BuildPings <- htmlcontent%>%
html_nodes(xpath = path_BuildPing)%>%
html_text()
Prices <- htmlcontent%>%
html_nodes(xpath = path_Price)%>%
html_text()
LocalPings <- htmlcontent%>%
html_nodes(xpath = path_LocalPing)%>%
html_text()
Floors <- htmlcontent%>%
html_nodes(xpath = path_Floor)%>%
html_text()
Olds <- htmlcontent%>%
html_nodes(xpath = path_Old)%>%
html_text()
ParkingSpaces <- htmlcontent%>%
html_nodes(xpath = path_ParkingSpace)%>%
html_text()
PathNum <- substr(paths,nchar(paths)-20,nchar(paths))
cat("第",i,"頁讀取中...(~",PathNum,")","\n")
# Finish DataFrame
x <- rbind(x,data.frame(Dates,Types,Locals,Closings,BuildPings,Prices,LocalPings,Floors,Olds,ParkingSpaces))
}
cat("步驟三：資料清理請稍候...","\n")
# delete space
Etl_space <- as.data.frame(lapply(x,str_trim))
# delete \n & \r
for(i in 1:ncol(Etl_space)){
Etl_space[,i] <- Etl_nr(Etl_space,i)
}
# Output data to csv
cat("清理完成，開始匯出檔案...","\n")
Today <- Sys.Date()
Insurance_name <- paste0(getwd(),"/Crawler_Data/(",Today,")Crawler_YoungChing_Neihu.csv")
write.table(Etl_space,Insurance_name,quote=TRUE,sep = ",",na="NaN",fileEncoding="utf-8")# 是否覆蓋同檔名使用'append'
cat("恭喜完成！請至目標資料夾查看！")
View(Etl_space)
Etl_space[,4]
str_trim(Etl_space[,4])
Etl_nr(Etl_space[,4])
Etl_nr(Etl_space[4])
Etl_nr <-
function(a,b){
a[,b] <-gsub("\r?\n|\r",,a[,b])
return(a[,b])
}
cat("步驟一：爬蟲工具初始化...","\n")
source(paste0(getwd(),"/NeedPackage.R"))
source(paste0(getwd(),"/UrlXpath.R"))
source(paste0(getwd(),"/FunLibary.R"))
# Start DataFrame
x <- data.frame()
cat("步驟二：開始爬取資料:","\n")
# create html path
for(i in 1:8){
if(i == 1){
paths <- url_fun("")
}else{
paths <- url_fun(i)
}
# Load data
htmlcontent <- read_html(paths)
Dates <- htmlcontent%>%
html_nodes(xpath = path_Date)%>%
html_text()
Types <- htmlcontent%>%
html_nodes(xpath = path_Type)%>%
html_text()
Locals <- htmlcontent%>%
html_nodes(xpath = path_Local)%>%
html_text()
Closings <- htmlcontent%>%
html_nodes(xpath = path_Closing)%>%
html_text()
BuildPings <- htmlcontent%>%
html_nodes(xpath = path_BuildPing)%>%
html_text()
Prices <- htmlcontent%>%
html_nodes(xpath = path_Price)%>%
html_text()
LocalPings <- htmlcontent%>%
html_nodes(xpath = path_LocalPing)%>%
html_text()
Floors <- htmlcontent%>%
html_nodes(xpath = path_Floor)%>%
html_text()
Olds <- htmlcontent%>%
html_nodes(xpath = path_Old)%>%
html_text()
ParkingSpaces <- htmlcontent%>%
html_nodes(xpath = path_ParkingSpace)%>%
html_text()
PathNum <- substr(paths,nchar(paths)-20,nchar(paths))
cat("第",i,"頁讀取中...(~",PathNum,")","\n")
# Finish DataFrame
x <- rbind(x,data.frame(Dates,Types,Locals,Closings,BuildPings,Prices,LocalPings,Floors,Olds,ParkingSpaces))
}
cat("步驟三：資料清理請稍候...","\n")
# delete space
Etl_space <- as.data.frame(lapply(x,str_trim))
# delete \n & \r
for(i in 1:ncol(Etl_space)){
Etl_space[,i] <- Etl_nr(Etl_space,i)
}
# Output data to csv
cat("清理完成，開始匯出檔案...","\n")
Today <- Sys.Date()
Insurance_name <- paste0(getwd(),"/Crawler_Data/(",Today,")Crawler_YoungChing_Neihu.csv")
write.table(Etl_space,Insurance_name,quote=TRUE,sep = ",",na="NaN",fileEncoding="utf-8")# 是否覆蓋同檔名使用'append'
cat("恭喜完成！請至目標資料夾查看！")
View(Etl_space)
str_trim("\n\nString with trailing and leading white space\n\n")
"\n\nString with trailing and leading white space\n\n"
str_squish("\n\nString with excess,  trailing and leading white   space\n\n")
c(" x y "," \u2190 \u2192 ",paste0(whitespace,"x",whitespace,"y",whitespace,collapse = ""),NA)
whitespace <- " \t\n\r\v\f" # space, tab, newline,
c(" x y "," \u2190 \u2192 ",paste0(whitespace,"x",whitespace,"y",whitespace,collapse = ""),NA)
c(" x y ",paste0(whitespace,"x",whitespace,"y",whitespace,collapse = ""),NA)
,"\
c(" x y ","\,paste0(whitespace,"x",whitespace,"y",whitespace,collapse = ""),NA)
u2190 \u2192"
c(" x y ","\u2190 \u2192",paste0(whitespace,"x",whitespace,"y",whitespace,collapse = ""),NA)
c(" x y ","\u2190 \u2192",paste0(whitespace,"x",whitespace,"y",whitespace,collapse = ""))
c(" x y ",paste0(whitespace,"x",whitespace,"y",whitespace,collapse = ""))
c(" x y ",paste0("x","y",,collapse = ""))
c(" x y ",paste0("x","y",collapse = ""))
c(" x y ",collapse = "")
whitespace <- " \t\n\r\v\f   " # space, tab, newline,
whitespace
gsub(" ", "", x, fixed = TRUE)
gsub(" ", "",whitespace, fixed = TRUE)
gsub(" ", "",Etl_nr[4],fixed = TRUE)
gsub(" ", "",Etl_nr[,4],fixed = TRUE)
for(i in 1:ncol(Etl_space)){
Etl_space[,i] <- Etl_nr(Etl_space,i)
}
for(i in 1:ncol(Etl_space)){
Etl_space[,i] <- Etl_nr(Etl_space,i)
}
Etl_nr <-
function(a,b){
a[,b] <-gsub("\r?\n|\r","",a[,b])
#a[,b] <-gsub(" ","",a[,b],fixed = TRUE)
return(a[,b])
}
for(i in 1:ncol(Etl_space)){
Etl_space[,i] <- Etl_nr(Etl_space,i)
}
for(i in 1:ncol(Etl_space)){
Etl_space[,i] <- Etl_nr(Etl_space,i)
}
View(Etl_space)
Etl_nr <-
function(a,b){
a[,b] <-gsub("\r?\n|\r","",a[,b])
a[,b] <-gsub(" ","",a[,b],fixed = TRUE)
return(a[,b])
}
for(i in 1:ncol(Etl_space)){
Etl_space[,i] <- Etl_nr(Etl_space,i)
}
View(Etl_space)
for(i in 1:ncol(x)){
x[,i] <- Etl_nr(x,i)
}
View(x)
cat("清理完成，開始匯出檔案...","\n\n")
Sys.time()
proc.time()
proc.time()
sleep_for_a_minute <- function() { Sys.sleep(60) }
start_time <- Sys.time()
sleep_for_a_minute()
end_time <- Sys.time()
end_time - start_time
proc.time()
sleep_for_a_minute <- function() { Sys.sleep(60) }
start_time <- Sys.time()
sleep_for_a_minute()
end_time <- Sys.time()
end_time - start_time
sleep_for_a_minute <- function() {Sys.sleep(60)}
start_time <- Sys.time()
sleep_for_a_minute()
end_time - start_time
end_time <- Sys.time()
end_time <- Sys.time()
start_time <- Sys.time()
end_time - start_time
sleep_for_a_minute <- function() {Sys.sleep(60)}
end_time - start_time
start_time <- Sys.time()
sleep_for_a_minute <- function() {Sys.sleep(60)}
start_time <- Sys.time()
end_time - start_time
end_time - start_time
start_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
end_time - start_time
Sys.time()
satr <- Sys.time()
satr
Sys.time()
Sys.time()
Sys.time()
Sys.time()-satr
Sys.time()-satr
Sys.time()-satr
Sys.time()-satr
Sys.time()-satr
cat('1','1','1','1','1')
